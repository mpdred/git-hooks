#!/bin/bash
set -euo pipefail

GIT_ROOT_DIR="$(git rev-parse --show-toplevel)"
cd "$GIT_ROOT_DIR"

process_go() {
  ## we only want to process Go files that have been staged
  STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.go')
  [[ $STAGED_GO_FILES == "" ]] && return 0

  ## ensure modules are not missing and that they are up-to-date
  go mod tidy

  ## run the unit tests
  go test -coverprofile=coverage.out -covermode=set "$GIT_ROOT_DIR"/...
  go tool cover -func=coverage.out

  if [[ $STAGED_GO_FILES != "" ]];
  then

    ## lint
    go vet -c=5
    which golangci-lint || go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
    golangci-lint run \
      --new \
      --enable-all \
      --disable "wrapcheck,gofumpt,tagliatelle,exhaustivestruct,ireturn" \
      --exclude-use-default \
      --verbose \
      --sort-results \
      --timeout 5m0s \
      --print-resources-usage \
      --max-issues-per-linter 0 \
      --max-same-issues 0 \
      --skip-dirs '.*(generated).*' \
      --fix \
      "$GIT_ROOT_DIR"/...

    for file in $STAGED_GO_FILES; do
        ## format and fix imports
        go fmt "$file"
        which goimports || go get golang.org/x/tools/cmd/goimports
        goimports -e -w "$file"

        ## add any potential changes from our formatting to the commit
        git add "$file"
    done

    ## verify dependencies
    go mod verify
  fi
}

process_terraform() {
  ## we only want to process Terraform files that have been staged
  STAGED_TF_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.tf')
  [[ $STAGED_TF_FILES == "" ]] && return 0

  if [[ $STAGED_TF_FILES != "" ]];
  then
    for file in $STAGED_TF_FILES; do
        ## format
        terraform fmt "$file"

        ## validate all files
        fileDir=$(dirname "$GIT_ROOT_DIR"/"$file")
        terraform -chdir="$fileDir" init
        terraform -chdir="$fileDir" validate

        ## add any potential changes from our formatting to the commit
        git add "$file"
    done
  fi
}

test -f "$GIT_ROOT_DIR/go.mod" && process_go
find "$GIT_ROOT_DIR" -name "*.tf" > /dev/null && process_terraform

exit 0
